.BEGIN B

SUBTTL B INTERPRETER

R1=1
R2=2
R3=3
R4=4
DP=14
SP=15
IP=16
P=17


; MAIN OPERATIONS

;SET STACK
S":	MOVE SP,DP
	MOVE R1,(IP)
	HRL R1,R1
	ADD SP,R1
	JRST 1(IP)

;TRANSFERS
F":	SKIPE (SP)
	JRST 1(IP)
T":	MOVE IP,(IP)
	JRST (IP)

;INIT AUTOMATIC VECTOR
Y":	MOVE R1,DP
	ADD R1,(IP)
	AOS R1
	HRRZM R1,-1(R1)
	JRST 1(IP)

;SWITCH
Z":	MOVE R1,(SP)
	MOVE R2,(IP)
	MOVE R3,(R2)
	AOS R2
Z1:	CAMN R1,(R2)
	JRST Z2
	ADDI R2,2
	SOJN R3,Z1
	SKIPA IP,R2
Z2:	MOVE IP,1(R2)
	JRST (IP)

;PUSH CONSTANT
C":	PUSH SP,(IP)
	JRST 1(IP)
IC":	MOVE R1,(IP)
	MOVEM R1,(SP)
	JRST 1(IP)

;PUSH AUTOMATIC
A":	MOVE R1,(IP)
	ADD R1,DP
	PUSH SP,(R1)
	JRST 1(IP)
IA":	MOVE R1,(IP)
	ADD R1,DP
	MOVE R1,(R1)
	MOVEM R1,(SP)
	JRST 1(IP)

;PUSH AUTOMATIC LVALUE
VA":	MOVE R1,(IP)
	ADD R1,DP
	HRRZS R1	;NOT ABSOLUTELY NECESSARY
	PUSH SP,R1
	JRST 1(IP)
IVA":	MOVE R1,(IP)
	ADD R1,DP
	HRRZM R1,(SP)
	JRST 1(IP)

;PUSH EXTERNAL
X":	MOVE R1,(IP)
	PUSH SP,(R1)
	JRST 1(IP)
IX":	MOVE R1,(IP)
	MOVE R1,(R1)
	MOVEM R1,(SP)
	JRST 1(IP)

; PUSH EXTERNAL LVALUE
VX":	MOVE R1,(IP)
	PUSH SP,R1
	JRST 1(IP)
IVX":	MOVE R1,(IP)
	MOVEM R1,(SP)
	JRST 1(IP)

;MARK
N2":	PUSH P,SP
	ADD SP,[1,,1]
	JRST (IP)
;CALL
N3":	POP P,SP
;MCALL
N1":	EXCH DP,(SP)
	MOVEM IP,1(SP)
	MOVE IP,DP
	MOVE DP,SP
	JRST (IP)

;RETURN VALUE
N7":	MOVE R1,(SP)
	MOVE SP,DP
	MOVE DP,(SP)
	MOVE IP,1(SP)
	MOVEM R1,(SP)
	JRST (IP)

;RETURN VOID
N11":	MOVE SP,DP
	MOVE DP,(SP)
	MOVE IP,1(SP)
	JRST (IP)

;VECTOR INDEX
N4":	POP SP,R1
	ADD R1,(SP)
	MOVE R1,(R1)
	MOVEM R1,(SP)
	JRST (IP)

;GOTO
N6":	MOVE IP,(SP)
	JRST (IP)

;UNARY OPERATORS

; - OPERATOR
U2":	MOVNS (SP)
	JRST (IP)

; * OPERATOR
U3":	POP SP,R1
	PUSH SP,(R1)
	JRST (IP)

; ! OPERATOR
U4":	SKIPE (SP)
	SKIPA R1,0
	MOVEI R1,1
	MOVEM R1,(SP)
	JRST (IP)

; ++X OPERATOR
U5":	MOVE R1,(SP)
	AOS R2,(R1)
	MOVEM R2,(SP)
	JRST (IP)

; --X OPERATOR
U6":	MOVE R1,(SP)
	SOS R2,(R1)
	MOVEM R2,(SP)
	JRST (IP)

; X++ OPERATOR
U7":	MOVE R1,(SP)
	MOVE R2,(R1)
	MOVEM R2,(SP)
	AOS (R1)
	JRST (IP)

; X-- OPERATOR
U10":	MOVE R1,(SP)
	MOVE R2,(R1)
	MOVEM R2,(SP)
	SOS (R1)
	JRST (IP)

;BINARY OPERATORS

; = OPERATOR
B1":	POP SP,R1
	MOVE R2,(SP)
	MOVEM R1,(R2)
	MOVEM R1,(SP)
	JRST (IP)

; | OPERATOR
B2":	POP SP,R1
	IORM R1,(SP)
	JRST (IP)

; & OPERATOR
B3":	POP SP,R1
	ANDM R1,(SP)
	JRST (IP)

; == OPERATOR
B4":	POP SP,R1
	CAME R1,(SP)
	SKIPA R1,0
	MOVEI R1,1
	MOVEM R1,(SP)
	JRST (IP)

; != OPERATOR
B5":	POP SP,R1
	CAMN R1,(SP)
	SKIPA R1,0
	MOVEI R1,1
	MOVEM R1,(SP)
	JRST (IP)

; <= OPERATOR
B6":	POP SP,R1
	CAMGE R1,(SP)
	SKIPA R1,0
	MOVEI R1,1
	MOVEM R1,(SP)
	JRST (IP)

; < OPERATOR
B7":	POP SP,R1
	CAMG R1,(SP)
	SKIPA R1,0
	MOVEI R1,1
	MOVEM R1,(SP)
	JRST (IP)

; >= OPERATOR
B10":	POP SP,R1
	CAMLE R1,(SP)
	SKIPA R1,0
	MOVEI R1,1
	MOVEM R1,(SP)
	JRST (IP)

; > OPERATOR
B11":	POP SP,R1
	CAML R1,(SP)
	SKIPA R1,0
	MOVEI R1,1
	MOVEM R1,(SP)
	JRST (IP)

; >> OPERATOR
B12":	POP SP,R2
	MOVE R1,(SP)
	MOVNS R2
	ASH R1,(R2)
	MOVEM R1,(SP)
	JRST (IP)

; << OPERATOR
B13":	POP SP,R2
	MOVE R1,(SP)
	LSH R1,(R2)
	MOVEM R1,(SP)
	JRST (IP)

; + OPERATOR
B14":	POP SP,R1
	ADDM R1,(SP)
	JRST (IP)

; - OPERATOR
B15":	POP SP,R1
	MOVNS R1
	ADDM R1,(SP)
	JRST (IP)

; % OPERATOR
B16":	POP SP,R1
	MOVE R2,(SP)
	IDIV R2,R1
	MOVEM R3,(SP)
	JRST (IP)

; * OPERATOR
B17":	POP SP,R1
	JFCL 10,.+1
	IMULB R1,(SP)
	JFCL 10,.+2
	JRST (IP)
	TLC R1,400000
	MOVEM R1,(SP)
	JRST (IP)

; / OPERATOR
B20":	POP SP,R1
	EXCH R1,(SP)
	IDIVM R1,(SP)
	JRST (IP)

; =| OPERATOR
B102":	POP SP,R1
	MOVE R2,(SP)
	IORB R1,(R2)
	MOVEM R1,(SP)
	JRST (IP)

; =& OPERATOR
B103":	POP SP,R1
	MOVE R2,(SP)
	ANDB R1,(R2)
	MOVEM R1,(SP)
	JRST (IP)

; =>> OPERATOR
B112":	POP SP,R1
	MOVE R2,(SP)
	MOVE R3,(R2)
	MOVNS R1
	ASH R3,(R1)
	MOVEM R3,(R2)
	MOVEM R3,(SP)
	JRST (IP)

; =<< OPERATOR
B113":	POP SP,R1
	MOVE R2,(SP)
	MOVE R3,(R2)
	LSH R3,(R1)
	MOVEM R3,(R2)
	MOVEM R3,(SP)
	JRST (IP)

; =+ OPERATOR
B114":	POP SP,R1
	MOVE R2,(SP)
	ADDB R1,(R2)
	MOVEM R1,(SP)
	JRST (IP)

; =- OPERATOR
B115":	POP SP,R1
	MOVE R2,(SP)
	MOVNS R1
	ADDB R1,(R2)
	MOVEM R1,(SP)
	JRST (IP)

; =% OPERATOR
B116":	POP SP,R1
	MOVE R4,(SP)
	MOVE R2,(R4)
	IDIV R2,R1
	MOVEM R3,(R4)
	MOVEM R3,(SP)
	JRST (IP)

; =* OPERATOR
B117":	POP SP,R1
	JFCL 10,.+1
	MOVE R2,(SP)
	IMULB R1,(R2)
	JFCL 10,.+3
	MOVEM R1,(SP)
	JRST (IP)
	TLC R1,400000
	MOVEM R1,(R2)
	MOVEM R1,(SP)
	JRST (IP)

; =/ OPERATOR
B120":	POP SP,R1
	MOVE R4,(SP)
	MOVE R2,(R4)
	IDIV R2,R1
	MOVEM R2,(R4)
	MOVEM R2,(SP)
	JRST (IP)


.END B